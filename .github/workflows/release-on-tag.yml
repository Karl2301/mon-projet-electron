name: Build & Release on Tag

on:
  push:
    tags:
      - 'v*'     # déclenche pour les tags qui commencent par "v"

permissions:
  contents: write  # nécessaire pour créer release / upload (si vous publiez depuis l'action)

env:
  NODE_VERSION: 18

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        # si besoin : ajouter node-version dans matrix
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit --progress=false

      - name: Build (optional)
        run: npm run build || echo "no build step"

      - name: Run make (producez vos installateurs)
        # adapter selon votre script : "make" / "dist" / "electron-builder --linux"
        run: npm run make

      - name: Upload built artifacts for later publishing
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}
          path: |
            dist/**
            release/**        # adaptez aux emplacements de vos artefacts
            out/**

  publish:
    name: Create Release & upload assets
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts (all OS builds)
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}   # le tag déclencheur, ex. v1.2.3
          name: Release ${{ github.ref_name }}
          body: Release ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload assets to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts     # si plusieurs fichiers on peut boucler (voir notes)
          asset_name: my-app-${{ github.ref_name }}-all.zip
          asset_content_type: application/zip
